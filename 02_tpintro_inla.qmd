---
title: "TD1 - Statistique Spatiale"
author:
  - name: Marie-Pierre Etienne (sur la base du TD  de Liliane Bel)
    affiliation: 
      - ENSAI - CREST
    email: marie-pierre.etienne@ensai.fr
date: "Last updated on `r format(Sys.time(), '%d %B, %Y')`"
institute: https://marieetienne.github.io/statspat
execute: 
  freeze: true
editor: 
  markdown: 
    wrap: 72
css: mpe_pres_revealjs.css
format: html
bibliography: spatstat.bib
---

Ce TP est construit à partir des idées explorées durant la session [FinistR2023](https://stateofther.github.io/finistR2023/)

## Introduction

Présentation de la méthodologie INLA (integrated nested Laplace approximation) en utilisant les packages {INLA}.


Ressources :

-   <https://www.r-inla.org/home>

-   <https://inla.r-inla-download.org/r-inla.org/doc/inla-manual/inla-manual.pdf>


[IMPORTANT : Utiliser le cluster 13 !!! INLA n'est pas installé sur les autres.]{.rouge}

## Installation de INLA

(Ici inutile car INLA est déja sur le cluster 13)

```{r}
#| eval: false
# Base de R INLA
install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
# inlabru wrapper
install.packages("inlabru")
```

## La réussite en maths


### Chargement de packages

```{r loading}
#| warning: false
#| message: false
# Chargement des packages
library(tidyverse)
library(INLA)
library(lme4) # pour comparer avec l'approche frequentiste 

```

Le jeu de données `awards` contient le nombre de récompenses (`num_awards`) obtenues en fonction des résultats en mathématique (`math`) pour une classe de 200 élèves. 

La réponse mesurée est un comptage.

```{r data-set}
# Chargement des donnees
load("data/awards.RData")
head(awards)
```

<!-- La fonction `bru_options_set` permet de fixer des options sur des paramètres spécifiques à INLA. -->

<!-- ```{r set-options} -->
<!-- bru_options_set(bru_verbose = TRUE, -->
<!--                 control.compute = list(dic = TRUE, waic = TRUE)) -->
<!-- ``` -->

<!-- On peut récupérer ces paramètres avec : -->

<!-- ```{r get-options} -->
<!-- #| eval: false -->
<!-- bru_options_get() -->
<!-- ``` -->

1. On souhaite voir la note de mathématique est liée au nombre de récompenses obtenues. Proposer une représentation graphique

```{r}
 #| eval: false
 #| echo: false
 #| label: awards_pres
awards |> ggplot() + aes(x= math, y = num_awards) + geom_point()
```

2. Proposer un modèle. 

<!-- $$Y_i\overset{ind}{\sim}\mathcal{P}(\exp(\mu+\alpha\cdot x_i))\,.$$ -->

3. Ajustement du modèle

```{r}
 #| eval: false
 #| label: awards_first_model
# Application de la formule avec un modèle de Poisson
m.pois.lin1 <- inla(num_awards ~ math,
  data = awards, family = "poisson")
summary(m.pois.lin1)
#Vous pouvez éventuellement comparer à ce que donneraitjags
```

4. Quelle est la distribution a posteriori pour l'effet des mathématiques

```{r}
 #| echo: true
 #| label: awards_first_post
m.pois.lin1$marginals.fixed$math |> 
  ggplot() + aes(x=x, y = y) + geom_line() + 
  stat_function(fun = dnorm, args = list(mean = mean(m.pois.lin1$summary.fixed[2,1]), sd = m.pois.lin1$summary.fixed[2,2]), col = "red")
```

5. Comparer avec les résultats obtenus en utilisant un modèle linéaire généralisé estimé par max de vraisemblance


<!-- ```{r glm1} -->
<!-- fit2.glm <- glm(num_awards ~ math, family="poisson", data = awards) -->
<!-- summary(fit2.glm) -->
<!-- ``` -->

6. Pour prendre en compte le problème classique de surdispersion dans les données de comptages, il peut être intéressant de rajouter un effet aléatoire de la manière suivante. Identifier tous les hyper paramètres et toutes les variables latentes.

$$Y_i\overset{ind}{\sim}\mathcal{P}(\exp(\mu+\alpha\cdot x_i+E_i)) \quad \text{avec}\quad E_i\overset{ind}{\sim}\mathcal{N}(0,\sigma^2).$$

```{r effet-aleatoire}
 #| echo: true
 #| label: awards_ranef
 
awards <- awards |> mutate(ID = 1:nrow(awards))
m.pois.lin_surd <- inla(num_awards ~ math + f(ID, model = "iid"),
  data = awards, family = "poisson")
summary(m.pois.lin_surd)
```


7. Discuter les distributions a posteriori des effets fixes

8. on peut regarder la loi a posteriori de la précision sur les effets alétaoires 

```{r}
 m.pois.lin_surd$summary.hyperpar
m.pois.lin_surd$marginals.hyperpar$`Precision for ID` |>  ggplot() + aes(x=x, y = y) + geom_line()
```

9. Si une variable aléatoire V est strictement positive et admet une densité $f$, quelle est la densité de 1/V ? En déduire la loi a posteriore de la variance de l'effet aléatoire.

```{r}
m.pois.lin_surd$marginals.hyperpar$`Precision for ID` |>  as.data.frame() |>  mutate(u = 1/x, fu = x^2 ) |> 
  ggplot() + aes(x=u, y = fu) + geom_line()
```


10. On peut accéder aux effets aléatoires a posteriori, par exemple pour l'élève 1.


```{r}
 #| echo: true
 #| label: awards_post_ranef
m.pois.lin_surd$marginals.random$ID$index.1
m.pois.lin_surd$marginals.random$ID$index.1 |>  ggplot() + aes(x=x, y = y) + geom_line()
```



11. On peut comparer un modèle à effets aléatoires généralisés en fréquentiste. Que constatez vous ?

```{r}
#| echo: true
#| label: awards_ranef_freq
fit4.glmm<-glmer(num_awards ~ math + (1|id), family = poisson, data = awards)
summary(fit4.glmm)
```

12. Quels sont les priors utilisés par inla pour les précisions ? Vous pourrez utiliser la commande `inla.doc("iid")`. Quelle différence entre prior et postérior ?


13. On souhaite changer le prior en une loi gamma de parametre  1,2 (Attention les priors sont codés dans le format interne d'inla cf [Table 5.3 @gomez2020bayesian](https://becarioprecario.bitbucket.io/inla-gitbook/ch-priors.html#tab:internalhyper)


```{r effet-aleatoire-2}
m.pois.lin_surd2 <- inla(num_awards ~ math + 
                           f(ID, model = "iid",
                             hyper = list(prec = list(prior = "loggamma", param = c(3, 1)))),
                         data = awards, family = "poisson")

summary(m.pois.lin_surd2)
```


14. on peut demander à inla de calculer des critères de sélection de modèle type DIC ou WAIC


```{r effet-aleatoire-3}
m.pois.lin_surd2 <- inla(num_awards ~ math + 
                           f(ID, model = "iid",
                             hyper = list(prec = list(prior = "loggamma", param = c(3, 1)))),
                         control.compute = list(dic = TRUE, waic = TRUE),
                         data = awards, family = "poisson")

summary(m.pois.lin_surd2)
```



## References

1.  <https://www.pymc.io/projects/examples/en/latest/gaussian_processes/log-gaussian-cox-process.html>
2.  Fabian E. Bachl, Finn Lindgren, David L. Borchers, and Janine B. Illian (2019), inlabru: an R package for Bayesian spatial modelling from ecological survey data, Methods in Ecology and Evolution, British Ecological Society, 10, 760--766, doi:10.1111/2041-210X.13168
3.  Funwi-Gabga, N. and Mateu, J. (2012) Understanding the nesting spatial behaviour of gorillas_sf in the Kagwene Sanctuary, Cameroon. Stochastic Environmental Research and Risk Assessment 26 (6), 793-811.
4.  <https://www.muscardinus.be/2018/07/inlabru-bru/>
5.  <https://inlabru-org.github.io/inlabru/index.html>
